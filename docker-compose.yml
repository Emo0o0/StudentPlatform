version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15
    environment:
      POSTGRES_DB: quarkus
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgre!132
      # Create additional databases
      POSTGRES_MULTIPLE_DATABASES: quarkus,keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network

  frontend:
    build:
      context: ../studentplatform-client
      dockerfile: Dockerfile
    ports:
      - "5173:80"  # map container port 80 to host 5173
    depends_on:
      - backend
    networks:
      - app-network


  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.4
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://database:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: Postgre!132
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
    ports:
      - "8180:8080"
    volumes:
      - ./keycloak-imports:/opt/keycloak/data/import
    depends_on:
      - database
    command:
      - start-dev
      - --import-realm
    networks:
      - app-network

  # Your Quarkus Backend
  backend:
    build:
      context: .  # Current directory since docker-compose.yml is in StudentPlatform
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - "8080:8080"
    environment:
      # Database connection (pointing to the database service)
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: Postgre!132
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://database:5432/quarkus
      QUARKUS_DATASOURCE_DB_KIND: postgresql

      # Keycloak connection (now pointing to containerized Keycloak)
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak:8080/realms/StudentPlatform
      QUARKUS_OIDC_CLIENT_ID: MainClient
      QUARKUS_OIDC_CREDENTIALS_SECRET: Se84Ip8v1nw58Ruca9PZc2pNuHn5sfs1
      QUARKUS_OIDC_APPLICATION_TYPE: service
      QUARKUS_OIDC_AUTHENTICATION_SCOPES: openid,profile,email,roles
      QUARKUS_OIDC_USER_INFO_REQUIRED: true

      # Token issuer should match what frontend/browser can access
      QUARKUS_OIDC_TOKEN_ISSUER: http://localhost:8180/realms/StudentPlatform
      QUARKUS_OIDC_VERIFY_ACCESS_TOKEN_WITH_USER_INFO: false

      # Hibernate configuration
      QUARKUS_HIBERNATE_ORM_SCHEMA_MANAGEMENT_STRATEGY: update

      # Jackson configuration
      QUARKUS_JACKSON_WRITE_DATES_AS_TIMESTAMPS: true
      QUARKUS_JACKSON_FAIL_ON_UNKNOWN_PROPERTIES: false

      # HTTP configuration
      QUARKUS_HTTP_HOST: 0.0.0.0
      QUARKUS_HTTP_PORT: 8080
      QUARKUS_HTTP_CORS: true
      QUARKUS_HTTP_CORS_ORIGINS: "*"
      QUARKUS_HTTP_CORS_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      QUARKUS_HTTP_CORS_HEADERS: "accept, authorization, content-type, x-requested-with, ngrok-skip-browser-warning"

      # Security configuration
      QUARKUS_HTTP_AUTH_PERMISSION_AUTHENTICATED_PATHS: "/*"
      QUARKUS_HTTP_AUTH_PERMISSION_AUTHENTICATED_POLICY: authenticated

      # Proxy configuration
      QUARKUS_HTTP_PROXY_PROXY_ADDRESS_FORWARDING: true

    depends_on:
      - database
      - keycloak
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: